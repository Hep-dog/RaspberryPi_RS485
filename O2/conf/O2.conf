###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.influxdb]]

   ## The full HTTP or UDP URL for your InfluxDB instance.
   ## urls = ["http://127.0.0.1:8086"] # required
    urls = ["http://192.168.137.15:8086"] # required
   #urls = ["http://localhost:8086"] # required
   
   ## The target database for metrics (telegraf will create it if not exists).
   database = "O2_trans" # required
   
   ## Name of existing retention policy to write to.  Empty string writes to
   ## the default retention policy.
   retention_policy = ""
   ## Write consistency (clusters only), can be: "any", "one", "quorum", "all"
   write_consistency = "any"
   
   ## Write timeout (for the InfluxDB client), formatted as a string.
   ## If not provided, will default to 5s. 0s means no timeout (not recommended).
   timeout = "5s"
   # username = "telegraf"
   # password = "metricsmetricsmetricsmetrics"
   ## Set the user agent for HTTP POSTs (can be useful for log differentiation)
   # user_agent = "telegraf"
   ## Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
   # udp_payload = 512



 # Stream and parse log file(s).
 [[inputs.logparser]]
   ## file(s) to read:
   files = ["/home/pi/Work/RS485/O2/data/O2.dat"]
   
   # Only send these fields to the output plugins
   fieldpass = ["temperature", "humidity", "O2", "timestamp"]
   tagexclude = ["path"]

   # Read the file from beginning on telegraf startup.
   from_beginning = true
   name_override = "O2_Humi_Temp"

   ## For parsing logstash-style "grok" patterns:
   [inputs.logparser.grok]
     patterns = ["%{TEMPERATURE_HUMIDITY_PATTERN}"]
     custom_patterns = '''
       TEMPERATURE_HUMIDITY_PATTERN %{NUMBER:timestamp:ts-epoch} Temp=%{NUMBER:temperature:float}C %{GREEDYDATA}=%{NUMBER:humidity:float}% %{GREEDYDATA}=%{NUMBER:O2:float}%{GREEDYDATA}
     '''
     timezone = "Asia/Shanghai"


#  # username = "telegraf"
#  # password = "metricsmetricsmetricsmetrics"
#  ## Set the user agent for HTTP POSTs (can be useful for log differentiation)
#  # user_agent = "telegraf"
#  ## Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
#  # udp_payload = 512
#

# # Configuration for Amon Server to send metrics to.
# [[outputs.amon]]
#   ## Amon Server Key
#   server_key = "my-server-key" # required.
#
#   ## Amon Instance URL
#   amon_instance = "https://youramoninstance" # required
#
#   ## Connection timeout.
#   # timeout = "5s"
